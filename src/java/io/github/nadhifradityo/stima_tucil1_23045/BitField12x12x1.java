
// Do NOT edit this file. This file was generated.

package io.github.nadhifradityo.stima_tucil1_23045;

public class BitField12x12x1 extends BitField {
	public static final int WIDTH = 12;
	public static final int HEIGHT = 12;
	public static final int DEPTH = 1;
	protected long _0;
	protected long _1;
	protected long _2;

	public int getWidth() {
		return WIDTH;
	}
	public int getHeight() {
		return HEIGHT;
	}
	public int getDepth() {
		return DEPTH;
	}

	public boolean getValue(int x, int y, int z) {
		assert x >= 0 && x < WIDTH;
		assert y >= 0 && y < HEIGHT;
		assert z >= 0 && z < DEPTH;
		int position = z * (HEIGHT * WIDTH) + y * WIDTH + x;
		if(position < 1024) return this.getValue_0(position);
		assert false;
		return false;
	}
	protected boolean getValue_0(int position) {
		long mask = 1L << (63 - position % 64);
		if(position < 64) return (this._0 & mask) != 0;
		if(position < 128) return (this._1 & mask) != 0;
		if(position < 192) return (this._2 & mask) != 0;
		assert false;
		return false;
	}

	public void setValue(int x, int y, int z, boolean v) {
		assert x >= 0 && x < WIDTH;
		assert y >= 0 && y < HEIGHT;
		assert z >= 0 && z < DEPTH;
		int position = z * (HEIGHT * WIDTH) + y * WIDTH + x;
		if(position < 1024) { this.setValue_0(position, v); return; }
		assert false;
	}
	protected void setValue_0(int position, boolean v) {
		long mask = ~(1L << (63 - position % 64));
		long value = v ? 1L << (63 - position % 64) : 0;
		if(position < 64) { this._0 = (this._0 & mask) | value; return; }
		if(position < 128) { this._1 = (this._1 & mask) | value; return; }
		if(position < 192) { this._2 = (this._2 & mask) | value; return; }
		assert false;
	}

	public void set(BitField that0) {
		if(!(that0 instanceof BitField12x12x1)) {
			super.set(that0);
			return;
		}
		var that = (BitField12x12x1) that0;
		this.set_0(that);
	}
	protected void set_0(BitField12x12x1 that) {
		this._0 = that._0;
		this._1 = that._1;
		this._2 = that._2;
	}

	public void clear() {
		this.clear_0();
	}
	protected void clear_0() {
		this._0 = 0;
		this._1 = 0;
		this._2 = 0;
	}

	public BitField12x12x1 clone() {
		var result = new BitField12x12x1();
		result.set(this);
		return result;
	}

	public void offsetX(int amount) {
		amount = Math.max(-WIDTH, Math.min(WIDTH, amount));
		if(amount >= 0) {
			while((amount / 4) > 0) {
				this.offsetPX4();
				amount -= 4;
			}
			while((amount / 2) > 0) {
				this.offsetPX2();
				amount -= 2;
			}
			while((amount / 1) > 0) {
				this.offsetPX1();
				amount -= 1;
			}
		} else {
			amount *= -1;
			while((amount / 4) > 0) {
				this.offsetNX4();
				amount -= 4;
			}
			while((amount / 2) > 0) {
				this.offsetNX2();
				amount -= 2;
			}
			while((amount / 1) > 0) {
				this.offsetNX1();
				amount -= 1;
			}
		}
		assert amount == 0;
	}
	protected void offsetPX4() {
		long _0 = this._0;
		this.offsetPX4_0(_0);
	}
	protected void offsetPX4_0(long _0) {
		this._2 = (this._2 & -71776119061217281L) | ((this._2 & 1148417904979476480L) >> 4);
		this._2 = (this._2 & 1152921504606846975L) | ((this._1 & 15L) << 60);
		this._1 = (this._1 & -1085351013494357776L) | ((this._1 & -1081127857799827216L) >> 4);
		this._0 = (this._0 & -1148698348912316401L) | ((this._0 & -67570491112489216L) >> 4);
		this._1 = (this._1 & 1152921504606846975L) | ((_0 & 15L) << 60);
		this._2 = this._2 & -1080863910568919041L;
		this._1 = this._1 & -67570491112489201L;
		this._0 = this._0 & 1148698348912316400L;
	}
	protected void offsetPX2() {
		long _0 = this._0;
		long _1 = this._1;
		this.offsetPX2_0(_0, _1);
	}
	protected void offsetPX2_0(long _0, long _1) {
		this._0 = (this._0 & -4608307493871763444L) | ((this._0 & -13514098222497844L) >> 2);
		this._1 = (this._1 & -4557629625537396544L) | ((this._1 & -216225571559965444L) >> 2);
		this._2 = (this._2 & -3746713414995542017L) | ((this._2 & -3459890413727383552L) >> 2);
		this._1 = (this._1 & 4611686018427387903L) | ((_0 & 3L) << 62);
		this._2 = (this._2 & 4611686018427387903L) | ((_1 & 3L) << 62);
		this._0 = this._0 & 4608307493871763443L;
		this._1 = this._1 & -54056392889991361L;
		this._2 = this._2 & -864691128455135233L;
	}
	protected void offsetPX1() {
		long _0 = this._0;
		long _1 = this._1;
		this.offsetPX1_0(_0, _1);
	}
	protected void offsetPX1_0(long _0, long _1) {
		this._0 = (this._0 & -9221119687151026168L) | ((this._0 & -4504699407499282L) >> 1);
		this._1 = (this._1 & -9187334441594781568L) | ((this._1 & -72075190519988482L) >> 1);
		this._2 = (this._2 & -8646629809574641665L) | ((this._2 & -1153484454560268288L) >> 1);
		this._1 = (this._1 & 9223372036854775807L) | ((_0 & 1L) << 63);
		this._2 = (this._2 & 9223372036854775807L) | ((_1 & 1L) << 63);
		this._0 = this._0 & 9221119687151026167L;
		this._1 = this._1 & -36037595259994241L;
		this._2 = this._2 & -576460752303423489L;
	}
	protected void offsetNX4() {
		long _2 = this._2;
		this.offsetNX4_0(_2);
	}
	protected void offsetNX4_0(long _2) {
		this._0 = (this._0 & 67570491112489215L) | ((this._0 & 1148698348912316400L) << 4);
		this._0 = (this._0 & -16L) | ((this._1 & -1152921504606846976L) >> 60);
		this._1 = (this._1 & 1081127857799827215L) | ((this._1 & 1085351013494357775L) << 4);
		this._2 = (this._2 & -1148417904979476481L) | ((this._2 & 71776119061217280L) << 4);
		this._1 = (this._1 & -16L) | ((_2 & -1152921504606846976L) >> 60);
		this._0 = this._0 & -67570491112489201L;
		this._1 = this._1 & -1081127857799827201L;
		this._2 = this._2 & 1148699379956187135L;
	}
	protected void offsetNX2() {
		long _1 = this._1;
		long _2 = this._2;
		this.offsetNX2_0(_1, _2);
	}
	protected void offsetNX2_0(long _1, long _2) {
		this._0 = (this._0 & 13514098222497843L) | ((this._0 & 4608307493871763443L) << 2);
		this._1 = (this._1 & 216225571559965443L) | ((this._1 & 4557629625537396543L) << 2);
		this._2 = (this._2 & 3459890413727383551L) | ((this._2 & 3746713414995542016L) << 2);
		this._0 = (this._0 & -4L) | ((_1 & -4611686018427387904L) >> 62);
		this._1 = (this._1 & -4L) | ((_2 & -4611686018427387904L) >> 62);
		this._0 = this._0 & -13514098222497841L;
		this._1 = this._1 & -216225571559965441L;
		this._2 = this._2 & -3459608938750672897L;
	}
	protected void offsetNX1() {
		long _1 = this._1;
		long _2 = this._2;
		this.offsetNX1_0(_1, _2);
	}
	protected void offsetNX1_0(long _1, long _2) {
		this._0 = (this._0 & 4504699407499281L) | ((this._0 & 9221119687151026167L) << 1);
		this._1 = (this._1 & 72075190519988481L) | ((this._1 & 9187334441594781567L) << 1);
		this._2 = (this._2 & 1153484454560268287L) | ((this._2 & 8646629809574641664L) << 1);
		this._0 = (this._0 & -2L) | ((_1 & -9223372036854775808L) >> 63);
		this._1 = (this._1 & -2L) | ((_2 & -9223372036854775808L) >> 63);
		this._0 = this._0 & -4504699407499281L;
		this._1 = this._1 & -72075190519988481L;
		this._2 = this._2 & -1153202979583557633L;
	}

	public void offsetY(int amount) {
		amount = Math.max(-HEIGHT, Math.min(HEIGHT, amount));
		if(amount >= 0) {
			while((amount / 4) > 0) {
				this.offsetPY4();
				amount -= 4;
			}
			while((amount / 2) > 0) {
				this.offsetPY2();
				amount -= 2;
			}
			while((amount / 1) > 0) {
				this.offsetPY1();
				amount -= 1;
			}
		} else {
			amount *= -1;
			while((amount / 4) > 0) {
				this.offsetNY4();
				amount -= 4;
			}
			while((amount / 2) > 0) {
				this.offsetNY2();
				amount -= 2;
			}
			while((amount / 1) > 0) {
				this.offsetNY1();
				amount -= 1;
			}
		}
		assert amount == 0;
	}
	protected void offsetPY4() {

		this.offsetPY4_0();
	}
	protected void offsetPY4_0() {
		this._2 = (this._2 & 281474976710655L) | ((this._1 & 281470681743360L) << 16);
		this._1 = (this._1 & -65536L) | ((this._1 & -281474976710656L) >> 48);
		this._1 = (this._1 & 65535L) | ((this._0 & 281474976710655L) << 16);
		this._0 = (this._0 & -65536L) | ((this._0 & -281474976710656L) >> 48);
		this._0 = this._0 & 65535L;
	}
	protected void offsetPY2() {

		this.offsetPY2_0();
	}
	protected void offsetPY2_0() {
		this._2 = (this._2 & 281474976710655L) | ((this._1 & 16776960L) << 40);
		this._1 = (this._1 & -1099511627776L) | ((this._1 & -16777216L) >> 24);
		this._1 = (this._1 & 1099511627775L) | ((this._0 & 16777215L) << 40);
		this._0 = (this._0 & -1099511627776L) | ((this._0 & -16777216L) >> 24);
		this._0 = this._0 & 1099511627775L;
	}
	protected void offsetPY1() {

		this.offsetPY1_0();
	}
	protected void offsetPY1_0() {
		this._2 = (this._2 & -4222124650659841L) | ((this._2 & -1152921504606846976L) >> 12);
		this._2 = (this._2 & 4503599627370495L) | ((this._1 & 4095L) << 52);
		this._1 = (this._1 & -4503599627370496L) | ((this._1 & -4096L) >> 12);
		this._1 = (this._1 & 4503599627370495L) | ((this._0 & 4095L) << 52);
		this._0 = (this._0 & -4503599627370496L) | ((this._0 & -4096L) >> 12);
		this._0 = this._0 & 4503599627370495L;
	}
	protected void offsetNY4() {

		this.offsetNY4_0();
	}
	protected void offsetNY4_0() {
		this._0 = (this._0 & 281474976710655L) | ((this._0 & 65535L) << 48);
		this._0 = (this._0 & -281474976710656L) | ((this._1 & -65536L) >> 16);
		this._1 = (this._1 & 281474976710655L) | ((this._1 & 65535L) << 48);
		this._1 = (this._1 & -281470681743361L) | ((this._2 & -281474976710656L) >> 16);
		this._1 = this._1 & -4294967296L;
		this._2 = this._2 & 281474976710655L;
	}
	protected void offsetNY2() {

		this.offsetNY2_0();
	}
	protected void offsetNY2_0() {
		this._0 = (this._0 & 16777215L) | ((this._0 & 1099511627775L) << 24);
		this._0 = (this._0 & -16777216L) | ((this._1 & -1099511627776L) >> 40);
		this._1 = (this._1 & 16777215L) | ((this._1 & 1099511627775L) << 24);
		this._1 = (this._1 & -16776961L) | ((this._2 & -281474976710656L) >> 40);
		this._1 = this._1 & -256L;
		this._2 = this._2 & 281474976710655L;
	}
	protected void offsetNY1() {

		this.offsetNY1_0();
	}
	protected void offsetNY1_0() {
		this._0 = (this._0 & 4095L) | ((this._0 & 4503599627370495L) << 12);
		this._0 = (this._0 & -4096L) | ((this._1 & -4503599627370496L) >> 52);
		this._1 = (this._1 & 4095L) | ((this._1 & 4503599627370495L) << 12);
		this._1 = (this._1 & -4096L) | ((this._2 & -4503599627370496L) >> 52);
		this._2 = (this._2 & 1152921504606846975L) | ((this._2 & 4222124650659840L) << 12);
		this._2 = this._2 & -1152640029630136321L;
	}

	public void offsetZ(int amount) {
		amount = Math.max(-DEPTH, Math.min(DEPTH, amount));
		if(amount >= 0) {
			while((amount / 4) > 0) {
				this.offsetPZ4();
				amount -= 4;
			}
			while((amount / 2) > 0) {
				this.offsetPZ2();
				amount -= 2;
			}
			while((amount / 1) > 0) {
				this.offsetPZ1();
				amount -= 1;
			}
		} else {
			amount *= -1;
			while((amount / 4) > 0) {
				this.offsetNZ4();
				amount -= 4;
			}
			while((amount / 2) > 0) {
				this.offsetNZ2();
				amount -= 2;
			}
			while((amount / 1) > 0) {
				this.offsetNZ1();
				amount -= 1;
			}
		}
		assert amount == 0;
	}
	protected void offsetPZ4() {

		this.offsetPZ4_0();
	}
	protected void offsetPZ4_0() {
		this._0 = 0;
		this._1 = 0;
		this._2 = this._2 & 281474976710655L;
	}
	protected void offsetPZ2() {

		this.offsetPZ2_0();
	}
	protected void offsetPZ2_0() {
		this._0 = 0;
		this._1 = 0;
		this._2 = this._2 & 281474976710655L;
	}
	protected void offsetPZ1() {

		this.offsetPZ1_0();
	}
	protected void offsetPZ1_0() {
		this._0 = 0;
		this._1 = 0;
		this._2 = this._2 & 281474976710655L;
	}
	protected void offsetNZ4() {

		this.offsetNZ4_0();
	}
	protected void offsetNZ4_0() {
		this._0 = 0;
		this._1 = 0;
		this._2 = this._2 & 281474976710655L;
	}
	protected void offsetNZ2() {

		this.offsetNZ2_0();
	}
	protected void offsetNZ2_0() {
		this._0 = 0;
		this._1 = 0;
		this._2 = this._2 & 281474976710655L;
	}
	protected void offsetNZ1() {

		this.offsetNZ1_0();
	}
	protected void offsetNZ1_0() {
		this._0 = 0;
		this._1 = 0;
		this._2 = this._2 & 281474976710655L;
	}

	public boolean isIntersecting(BitField that0) {
		if(!(that0 instanceof BitField12x12x1))
			return super.isIntersecting(that0);
		var that = (BitField12x12x1) that0;
		if(this.isIntersecting_0(that)) return true;
		return false;
	}
	protected boolean isIntersecting_0(BitField12x12x1 that) {
		if((this._0 & that._0) != 0) return true;
		if((this._1 & that._1) != 0) return true;
		if((this._2 & that._2) != 0) return true;
		return false;
	}

	public void complement() {
		this.complement_0();
	}
	protected void complement_0() {
		this._0 = ~this._0;
		this._1 = ~this._1;
		this._2 = ~this._2;
	}

	public void union(BitField that0) {
		if(!(that0 instanceof BitField12x12x1)) {
			super.union(that0);
			return;
		}
		var that = (BitField12x12x1) that0;
		this.union_0(that);
	}
	protected void union_0(BitField12x12x1 that) {
		this._0 |= that._0;
		this._1 |= that._1;
		this._2 |= that._2;
	}

	public void intersect(BitField that0) {
		if(!(that0 instanceof BitField12x12x1)) {
			super.union(that0);
			return;
		}
		var that = (BitField12x12x1) that0;
		this.intersect_0(that);
	}
	protected void intersect_0(BitField12x12x1 that) {
		this._0 &= that._0;
		this._1 &= that._1;
		this._2 &= that._2;
	}

	public void exclusive(BitField that0) {
		if(!(that0 instanceof BitField12x12x1)) {
			super.union(that0);
			return;
		}
		var that = (BitField12x12x1) that0;
		this.exclusive_0(that);
	}
	protected void exclusive_0(BitField12x12x1 that) {
		this._0 ^= that._0;
		this._1 ^= that._1;
		this._2 ^= that._2;
	}

	public void subtract(BitField that0) {
		if(!(that0 instanceof BitField12x12x1)) {
			super.union(that0);
			return;
		}
		var that = (BitField12x12x1) that0;
		this.subtract_0(that);
	}
	protected void subtract_0(BitField12x12x1 that) {
		this._0 &= ~that._0;
		this._1 &= ~that._1;
		this._2 &= ~that._2;
	}


}
